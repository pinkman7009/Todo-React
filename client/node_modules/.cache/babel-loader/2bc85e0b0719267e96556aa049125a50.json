{"ast":null,"code":"var _jsxFileName = \"/home/pinkman7009/Desktop/webd/react projects/todo-app/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TodoList from './components/todos/TodoList';\nimport AddTodo from './components/ui/AddTodo';\nimport ErrorMessage from './components/ui/Error';\nimport axios from 'axios';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    const getTodos = async () => {\n      const result = await axios.get('/api/v1/todos');\n      setTodos(result.data.data);\n    };\n\n    getTodos();\n  }, []); // To set value of new todo to be added\n\n  const onChangeNewTodo = e => {\n    setNewTodo(e.target.value);\n  }; // To add a todo\n\n\n  const addNewTodo = async e => {\n    if (!newTodo) {\n      setErrorMessage(\"Can't leave field empty\");\n      return;\n    }\n\n    setTodos(todos.concat({\n      text: newTodo\n    }));\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const todoNew = {\n      text: newTodo\n    };\n    const res = await axios.post('/api/v1/todos', todoNew, config);\n    setErrorMessage('');\n    setNewTodo('');\n  };\n\n  const updateTodo = async (value, index) => {\n    setErrorMessage('');\n    const copyTodos = [...todos];\n    copyTodos[index].text = value;\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const todoUpdated = {\n      text: value\n    };\n    const res = await axios.put(`/api/v1/todos/${copyTodos[index]._id}`, todoUpdated, config);\n    setTodos(copyTodos);\n  }; // To delete a todo\n\n\n  const deleteTodo = async index => {\n    setErrorMessage('');\n    const copyTodos = [...todos];\n    const delID = copyTodos[index]._id;\n    copyTodos.splice(index, 1);\n    await axios.delete(`/api/v1/todos/${delID}`);\n    setTodos(copyTodos);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: '#fff',\n      fontWeight: '300'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, \"Todo List\"), /*#__PURE__*/React.createElement(AddTodo, {\n    onAddTodo: addNewTodo,\n    onChangeNewTodo: onChangeNewTodo,\n    query: newTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }), errorMessage && /*#__PURE__*/React.createElement(ErrorMessage, {\n    message: errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 22\n    }\n  }), todos && /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    onDeleteTodo: deleteTodo,\n    onUpdateTodo: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, \"Update Todo\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    for: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }\n  }, \"Update\"))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/pinkman7009/Desktop/webd/react projects/todo-app/client/src/App.js"],"names":["React","useState","useEffect","TodoList","AddTodo","ErrorMessage","axios","App","todos","setTodos","newTodo","setNewTodo","errorMessage","setErrorMessage","getTodos","result","get","data","onChangeNewTodo","e","target","value","addNewTodo","concat","text","config","headers","todoNew","res","post","updateTodo","index","copyTodos","todoUpdated","put","_id","deleteTodo","delID","splice","delete","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TodoList from './components/todos/TodoList';\nimport AddTodo from './components/ui/AddTodo';\nimport ErrorMessage from './components/ui/Error';\nimport axios from 'axios';\nconst App = () => {\n\tconst [ todos, setTodos ] = useState([]);\n\n\tconst [ newTodo, setNewTodo ] = useState('');\n\n\tconst [ errorMessage, setErrorMessage ] = useState('');\n\n\tuseEffect(() => {\n\t\tconst getTodos = async () => {\n\t\t\tconst result = await axios.get('/api/v1/todos');\n\n\t\t\tsetTodos(result.data.data);\n\t\t};\n\t\tgetTodos();\n\t}, []);\n\n\t// To set value of new todo to be added\n\tconst onChangeNewTodo = (e) => {\n\t\tsetNewTodo(e.target.value);\n\t};\n\n\t// To add a todo\n\tconst addNewTodo = async (e) => {\n\t\tif (!newTodo) {\n\t\t\tsetErrorMessage(\"Can't leave field empty\");\n\t\t\treturn;\n\t\t}\n\t\tsetTodos(todos.concat({ text: newTodo }));\n\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json'\n\t\t\t}\n\t\t};\n\n\t\tconst todoNew = {\n\t\t\ttext: newTodo\n\t\t};\n\n\t\tconst res = await axios.post('/api/v1/todos', todoNew, config);\n\n\t\tsetErrorMessage('');\n\t\tsetNewTodo('');\n\t};\n\n\tconst updateTodo = async (value, index) => {\n\t\tsetErrorMessage('');\n\t\tconst copyTodos = [ ...todos ];\n\n\t\tcopyTodos[index].text = value;\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json'\n\t\t\t}\n\t\t};\n\n\t\tconst todoUpdated = {\n\t\t\ttext: value\n\t\t};\n\n\t\tconst res = await axios.put(`/api/v1/todos/${copyTodos[index]._id}`, todoUpdated, config);\n\n\t\tsetTodos(copyTodos);\n\t};\n\n\t// To delete a todo\n\tconst deleteTodo = async (index) => {\n\t\tsetErrorMessage('');\n\t\tconst copyTodos = [ ...todos ];\n\n\t\tconst delID = copyTodos[index]._id;\n\t\tcopyTodos.splice(index, 1);\n\n\t\tawait axios.delete(`/api/v1/todos/${delID}`);\n\t\tsetTodos(copyTodos);\n\t};\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"todo-card\">\n\t\t\t\t<h1 style={{ color: '#fff', fontWeight: '300' }}>Todo List</h1>\n\n\t\t\t\t<AddTodo onAddTodo={addNewTodo} onChangeNewTodo={onChangeNewTodo} query={newTodo} />\n\n\t\t\t\t{errorMessage && <ErrorMessage message={errorMessage} />}\n\t\t\t\t{todos && <TodoList todos={todos} onDeleteTodo={deleteTodo} onUpdateTodo={updateTodo} />}\n\t\t\t</div>\n\t\t\t<div className=\"modal-bg\">\n\t\t\t\t<div className=\"modal\">\n\t\t\t\t\t<h2>Update Todo</h2>\n\n\t\t\t\t\t<input type=\"text\" for=\"todo\" />\n\t\t\t\t\t<button>Update</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}